show_help() {
  local command="${1:-}"

  echo "$(bold_text "Dehashed API Client")"
  echo ""

  if [ -z "$command" ] || [ "$command" = "help" ]; then
    echo "$(bold_text "Description"):"
    echo "  Search the Dehashed database for leaked credentials and personal information"
    echo ""
    echo "$(bold_text "Usage"):"
    echo "  $(green "$(basename "$0") search <query>")"
    echo "  $(green "$(basename "$0") help")"
    echo ""
    echo "$(bold_text "Commands"):"
    echo "  $(cyan "search")        Search for leaked credentials (default command)"
    echo "  $(cyan "help")          Show this help information"
    echo ""
    echo "$(bold_text "Examples"):"
    echo "  $(green "$(basename "$0") search email:user@example.com")"
    echo "  $(green "$(basename "$0") search username:admin")"
    echo "  $(green "$(basename "$0") search domain:example.com")"
    echo "  $(green "$(basename "$0") search ip_address:192.168.1.1")"
    echo "  $(green "$(basename "$0") search \"name:John Doe\"")"
    echo ""
    echo "$(bold_text "Options"):"
    echo "  $(yellow "-k, --api-key")     Dehashed API key"
    echo "  $(yellow "-p, --page")        Page number for pagination"
    echo "  $(yellow "-s, --size")        Number of results per page (max 10000)"
    echo "  $(yellow "-f, --field")       Search specific field"
    echo "  $(yellow "-r, --regex")       Enable regex search"
    echo "  $(yellow "-w, --wildcard")    Enable wildcard search (use * for wildcards)"
    echo "  $(yellow "--no-dedupe")       Disable deduplication of results"
    echo "  $(yellow "-j, --json")        Output raw JSON response"
    echo "  $(yellow "-q, --quiet")       Suppress colored output"
    echo "  $(yellow "--no-header")       Don't display header information"
    echo "  $(yellow "--csv")             Output results in CSV format"
    echo "  $(yellow "--show-raw")        Include raw record data in output"
    echo ""
    echo "$(bold_text "Available Fields"):"
    echo "  $(cyan "name")                Person's name"
    echo "  $(cyan "email")               Email address"
    echo "  $(cyan "username")            Username"
    echo "  $(cyan "password")            Clear text password"
    echo "  $(cyan "hashed_password")     Hashed password"
    echo "  $(cyan "ip_address")          IP address"
    echo "  $(cyan "phone")               Phone number"
    echo "  $(cyan "address")             Physical address"
    echo "  $(cyan "social")              Social security number"
    echo "  $(cyan "domain")              Domain name"
    echo "  $(cyan "vin")                 Vehicle identification number"
    echo "  $(cyan "license_plate")       License plate number"
    echo "  $(cyan "cryptocurrency_address") Cryptocurrency wallet address"
    echo ""
    echo "$(bold_text "Wildcard Examples"):"
    echo "  $(green "$(basename "$0") search \"email:*@gmail.com\" --wildcard")"
    echo "  $(green "$(basename "$0") search \"username:admin*\" --wildcard")"
  fi
}

show_examples() {
  printf "\n$(bold_text "$(yellow "Example queries"):"):\n"
  printf "  $(cyan "email:user@example.com")         # Search by email\n"
  printf "  $(cyan "username:admin")                 # Search by username\n"
  printf "  $(cyan "domain:example.com")             # Search by domain\n"
  printf "  $(cyan "ip_address:192.168.1.1")         # Search by IP\n"
  printf "  $(cyan "name:\"John Doe\"")                # Search by name (quoted for spaces)\n"
  printf "  $(cyan "password:123456")                # Search by password\n"
  printf "\n$(bold_text "$(yellow "Wildcard examples"):"):\n"
  printf "  $(cyan "email:*@gmail.com --wildcard")   # All Gmail addresses\n"
  printf "  $(cyan "username:admin* --wildcard")     # Usernames starting with 'admin'\n"
}
